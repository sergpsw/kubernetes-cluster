---
apiVersion: v1
kind: Namespace
metadata:
  name: mysql-ns

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-sc
  namespace: mysql-ns
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pvc
#   namespace: mysql-ns
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: mysql-sc
#   resources:
#     requests:
#       storage: 2Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-local-provisioner-config
  namespace: kube-system #
data:
  nodeLabelsForPV: |
    - kubernetes.io/hostname
  storageClassMap: |
    mysql-sc:
      hostDir: /var/www/vagrant/
      mountDir: /var/www/vagrant/

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
  namespace: mysql-ns
  labels:
    app: wordpress
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: wordpress
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
  namespace: mysql-ns
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image:  mysql:5.7
        name: mysql # db_name
        env:
        # - name: MYSQL_ROOT_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: mysql-pass
        #       key: password
        - name: MYSQL_ROOT_PASSWORD
          value: password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/www/vagrant/
          mountPropagation: "HostToContainer"
      volumes:
      - name: mysql-persistent-storage
        hostPath:
          path: /var/www/vagrant/
        # persistentVolumeClaim:
        #   claimName: mysql-pvc
